@page "/vybaveni/{Id:guid}"
@inject HttpClient Http


<h3>Detail vybavení</h3>

@if (item == null)
{
       <Loader/>
    return;
}

<div class="grid grid-cols-2 max-w-md"> 

  <div class="bg-blue-400 ">Název</div>
  <div class="bg-red-500">@item.Name</div>

   <div class="bg-blue-400">Cena</div>
  <div class="bg-red-500">@item.PriceCzk</div>

   <div class="bg-blue-400">Nakoupeno</div>
  <div class="bg-red-500">@item.BoughtDateTime.ToString("yyyy-MM-dd")</div>

   <div class="col-span-2">
             <div class="font-bold">Revize</div>


     @foreach(var rev in item.Revizes)
        {
            <div> Nazev: @rev.Name Datum a cas: @rev.DateTime.ToString("yyyy-MM-dd HH:mm:ss")</div>
        }
    </div>

    <div class="col-span-2">
        <div class="font-bold">Úkony</div>

     @foreach(var uk in item.Ukons)
        {
            <div> Detail: @uk.Detail, Kód: @uk.Kod,  Datum a čas: @uk.DateTime.ToString("yyyy-MM-dd HH:mm:ss")</div>
        }
        <a href="ukon/new?VybaveniId=@Id" class="text-blue-500 underline">Přidat nový úkon k tomuto vybavení</a>
    </div>

 @*    <div class="bg-blue-400">Potřebuje revizi</div>
  <div class="bg-red-500">@(item.NeedsRevision?"Ano":"Ne")</div>*@
</div>
@code {

    [Parameter] public Guid Id {get;set;}

         VybaveniDetailModel? item;

    protected override async Task OnInitializedAsync()
    {
        item = await Http.GetFromJsonAsync<VybaveniDetailModel>($"vybaveni/{Id}");
    }
}
